{"ast":null,"code":"import { Contract } from \"@ethersproject/contracts\";\nimport Web3 from \"web3\";\nimport { RPC_URL, ACTIVE_NETWORK, NetworkDetails } from \"src/constants\";\nexport function sortAddress(add) {\n  if (add) {\n    const sortAdd = `${add.slice(0, 6)}...${add.slice(add.length - 4)}`;\n    return sortAdd;\n  } else return add;\n}\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const getWeb3Provider = async () => {\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL);\n  return httpProvider;\n};\nexport const getWeb3Obj = async () => {\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL);\n  const web3 = await new Web3(httpProvider);\n  return web3;\n};\nexport const getWeb3ContractObject = async (abi, contractAddress) => {\n  const web3 = await getWeb3Obj();\n  const contract = await new web3.eth.Contract(abi, contractAddress);\n  return contract;\n};\nexport const getBalanceOf = async (abi, address, account) => {\n  try {\n    const contract = await getWeb3ContractObject(abi, address);\n    const balanceOf = await contract.methods.balanceOf(account).call();\n    return balanceOf.toString();\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    return 0;\n  }\n};\nexport const swichNetworkHandler = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: \"0x\" + ACTIVE_NETWORK.toString(16)\n      }]\n    });\n  } catch (error) {\n    console.log(\"ERROR\", error);\n\n    if (error.code === 4902) {\n      addNetworkHandler();\n    }\n  }\n};\nexport const addNetworkHandler = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: NetworkDetails\n    });\n  } catch (error) {\n    console.log(\"ERROR\", error);\n  }\n};\nexport const calculateTimeLeft = endDate => {\n  if (endDate) {\n    let difference = +new Date(endDate) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeLeft;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/Users/ckvar/OneDrive/Desktop/CHirag/generative-min/src/utils/index.js"],"names":["Contract","Web3","RPC_URL","ACTIVE_NETWORK","NetworkDetails","sortAddress","add","sortAdd","slice","length","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","address","ABI","getWeb3Provider","httpProvider","providers","HttpProvider","getWeb3Obj","web3","getWeb3ContractObject","abi","contractAddress","contract","eth","getBalanceOf","balanceOf","methods","call","toString","error","console","log","swichNetworkHandler","window","ethereum","request","method","params","chainId","code","addNetworkHandler","calculateTimeLeft","endDate","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds"],"mappings":"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","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport Web3 from \"web3\";\nimport { RPC_URL, ACTIVE_NETWORK, NetworkDetails } from \"src/constants\";\nexport function sortAddress(add) {\n  if (add) {\n    const sortAdd = `${add.slice(0, 6)}...${add.slice(add.length - 4)}`;\n    return sortAdd;\n  } else return add;\n}\n\nexport function getSigner(library, account) {\n  return library.getSigner(account).connectUnchecked();\n}\n\nexport function getProviderOrSigner(library, account) {\n  return account ? getSigner(library, account) : library;\n}\n\nexport function getContract(address, ABI, library, account) {\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\nexport const getWeb3Provider = async () => {\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL);\n  return httpProvider;\n};\n\nexport const getWeb3Obj = async () => {\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL);\n  const web3 = await new Web3(httpProvider);\n  return web3;\n};\n\nexport const getWeb3ContractObject = async (abi, contractAddress) => {\n  const web3 = await getWeb3Obj();\n  const contract = await new web3.eth.Contract(abi, contractAddress);\n  return contract;\n};\n\nexport const getBalanceOf = async (abi, address, account) => {\n  try {\n    const contract = await getWeb3ContractObject(abi, address);\n    const balanceOf = await contract.methods.balanceOf(account).call();\n    return balanceOf.toString();\n  } catch (error) {\n    console.log(\"ERROR\", error);\n\n    return 0;\n  }\n};\nexport const swichNetworkHandler = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x\" + ACTIVE_NETWORK.toString(16) }],\n    });\n  } catch (error) {\n    console.log(\"ERROR\", error);\n    if (error.code === 4902) {\n      addNetworkHandler();\n    }\n  }\n};\n\nexport const addNetworkHandler = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: NetworkDetails,\n    });\n  } catch (error) {\n    console.log(\"ERROR\", error);\n  }\n};\nexport const calculateTimeLeft = (endDate) => {\n  if (endDate) {\n    let difference = +new Date(endDate) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n    return timeLeft;\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}